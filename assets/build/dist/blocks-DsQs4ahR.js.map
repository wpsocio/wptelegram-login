{"version":3,"file":"blocks-DsQs4ahR.js","sources":["../../../../js/blocks/telegram-login/getDomData.ts","../../../../js/blocks/telegram-login/Output.tsx","../../../../js/blocks/telegram-login/Edit.tsx","../../../../js/blocks/telegram-login/constants.ts","../../../../js/blocks/telegram-login/index.tsx"],"sourcesContent":["import { getPluginData } from '@wpsocio/services/get-plugin-data.js';\nimport type { WPTelegramLoginData } from './types';\n\nexport const getDomData = <\n\tK extends keyof WPTelegramLoginData | undefined = undefined,\n>(\n\tkey?: K,\n): K extends keyof WPTelegramLoginData\n\t? WPTelegramLoginData[K]\n\t: WPTelegramLoginData => {\n\treturn getPluginData('wptelegram_login', key);\n};\n","import type { BlockEditProps } from '@wordpress/blocks';\n\nimport { getDomData } from './getDomData';\nimport type { TelegramLoginAtts } from './types';\n\nconst assets = getDomData('assets');\n\nexport const Output: React.FC<\n\tPick<BlockEditProps<TelegramLoginAtts>, 'attributes' | 'className'>\n> = ({ attributes, className }) => {\n\tconst { button_style, show_user_photo, corner_radius } = attributes;\n\n\tlet button_width: string | undefined;\n\tif ('small' === button_style) {\n\t\tbutton_width = '100px';\n\t} else if ('medium' === button_style) {\n\t\tbutton_width = '150px';\n\t}\n\n\tlet avatar_width: string | undefined;\n\tif ('small' === button_style) {\n\t\tavatar_width = '20px';\n\t} else if ('medium' === button_style) {\n\t\tavatar_width = '30px';\n\t}\n\n\treturn (\n\t\t<div className={className}>\n\t\t\t<img\n\t\t\t\tsrc={assets.loginImageUrl}\n\t\t\t\tstyle={{ borderRadius: `${corner_radius}px`, width: button_width }}\n\t\t\t\talt=\"\"\n\t\t\t/>\n\t\t\t{show_user_photo ? (\n\t\t\t\t<img\n\t\t\t\t\tsrc={assets.loginAvatarUrl}\n\t\t\t\t\tstyle={{ width: avatar_width }}\n\t\t\t\t\talt=\"\"\n\t\t\t\t/>\n\t\t\t) : null}\n\t\t</div>\n\t);\n};\n","import { InspectorControls } from '@wordpress/block-editor';\nimport type { BlockEditProps } from '@wordpress/blocks';\nimport {\n\tFlex,\n\tPanelBody,\n\tRadioControl,\n\tSelectControl,\n\tTextControl,\n\tToggleControl,\n} from '@wordpress/components';\nimport { useCallback, useEffect } from '@wordpress/element';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport { Output } from './Output';\nimport { getDomData } from './getDomData';\nimport type { TelegramLoginAtts } from './types';\n\nconst getButtonStyleOptions = () => [\n\t{ label: __('Large'), value: 'large' },\n\t{ label: __('Medium'), value: 'medium' },\n\t{ label: __('Small'), value: 'small' },\n];\n\nconst savedSettings = (window.wptelegram_login?.savedSettings ||\n\t{}) as TelegramLoginAtts;\n\nexport const Edit: React.FC<BlockEditProps<TelegramLoginAtts>> = ({\n\tattributes,\n\tsetAttributes,\n\tclassName,\n}) => {\n\tconst {\n\t\tbutton_style,\n\t\tshow_user_photo,\n\t\tcorner_radius,\n\t\tlang,\n\t\tshow_if_user_is,\n\t} = { ...savedSettings, ...attributes };\n\n\tuseEffect(() => {\n\t\tfor (const key in savedSettings) {\n\t\t\tif (!(key in attributes)) {\n\t\t\t\tsetAttributes({ [key]: savedSettings[key as keyof TelegramLoginAtts] });\n\t\t\t}\n\t\t}\n\t}, []);\n\n\tconst uiData = getDomData('uiData');\n\n\tconst onChangeButtonStyle = useCallback(\n\t\t(newStyle: string) => setAttributes({ button_style: newStyle }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeShowUserPhoto = useCallback(\n\t\t(new_show_user_photo: boolean) =>\n\t\t\tsetAttributes({ show_user_photo: new_show_user_photo }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeCornerRadius = useCallback(\n\t\t(newRadius: string) => setAttributes({ corner_radius: newRadius }),\n\t\t[setAttributes],\n\t);\n\tconst onChangeShowIfUserIs = useCallback(\n\t\t(value: string) => setAttributes({ show_if_user_is: value }),\n\t\t[setAttributes],\n\t);\n\n\tconst onChangeLang = useCallback(\n\t\t(value: string) => setAttributes({ lang: value }),\n\t\t[setAttributes],\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<InspectorControls>\n\t\t\t\t<PanelBody title={__('Button Settings')}>\n\t\t\t\t\t<Flex direction=\"column\" gap={4}>\n\t\t\t\t\t\t<RadioControl\n\t\t\t\t\t\t\tlabel={__('Button Style')}\n\t\t\t\t\t\t\tselected={button_style}\n\t\t\t\t\t\t\tonChange={onChangeButtonStyle}\n\t\t\t\t\t\t\toptions={getButtonStyleOptions()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<ToggleControl\n\t\t\t\t\t\t\tlabel={__('Show User Photo')}\n\t\t\t\t\t\t\tchecked={show_user_photo}\n\t\t\t\t\t\t\tonChange={onChangeShowUserPhoto}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<TextControl\n\t\t\t\t\t\t\tlabel={__('Corner Radius')}\n\t\t\t\t\t\t\tvalue={corner_radius || ''}\n\t\t\t\t\t\t\tonChange={onChangeCornerRadius}\n\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\tmin=\"0\"\n\t\t\t\t\t\t\tmax=\"20\"\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Language')}\n\t\t\t\t\t\t\tvalue={lang}\n\t\t\t\t\t\t\tonChange={onChangeLang}\n\t\t\t\t\t\t\toptions={uiData.lang}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<SelectControl\n\t\t\t\t\t\t\tlabel={__('Show if user is')}\n\t\t\t\t\t\t\tvalue={show_if_user_is}\n\t\t\t\t\t\t\tonChange={onChangeShowIfUserIs}\n\t\t\t\t\t\t\toptions={uiData.show_if_user_is}\n\t\t\t\t\t\t\t__nextHasNoMarginBottom\n\t\t\t\t\t\t/>\n\t\t\t\t\t</Flex>\n\t\t\t\t</PanelBody>\n\t\t\t</InspectorControls>\n\t\t\t<Output attributes={attributes} className={className} />\n\t\t</>\n\t);\n};\n","import type { Block } from '@wordpress/blocks';\n\nimport type { TelegramLoginAtts } from './types';\n\nexport const blockAttributesV0: Block<TelegramLoginAtts>['attributes'] = {\n\tbutton_style: {\n\t\ttype: 'string',\n\t\tdefault: 'large',\n\t},\n\tshow_user_photo: {\n\t\ttype: 'boolean',\n\t\tdefault: true,\n\t},\n\tcorner_radius: {\n\t\ttype: 'string',\n\t\tdefault: '20',\n\t},\n\tshow_if_user_is: {\n\t\ttype: 'string',\n\t\tdefault: '0',\n\t},\n};\n\nexport const blockAttributesV1: Block<TelegramLoginAtts>['attributes'] = {\n\tbutton_style: {\n\t\ttype: 'string',\n\t},\n\tshow_user_photo: {\n\t\ttype: 'boolean',\n\t},\n\tcorner_radius: {\n\t\ttype: 'string',\n\t},\n\tshow_if_user_is: {\n\t\ttype: 'string',\n\t},\n};\n\nexport const blockAttributesV2: Block<TelegramLoginAtts>['attributes'] = {\n\t...blockAttributesV1,\n\tlang: {\n\t\ttype: 'string',\n\t},\n};\n","import { registerBlockType } from '@wordpress/blocks';\n\nimport { __ } from '@wpsocio/i18n';\n\nimport { Edit } from './Edit';\nimport { Output } from './Output';\nimport {\n\tblockAttributesV0,\n\tblockAttributesV1,\n\tblockAttributesV2,\n} from './constants';\nimport type { TelegramLoginAtts } from './types';\n\nimport './style.scss';\n\nconst savedSettings = (window.wptelegram_login?.savedSettings ||\n\t{}) as TelegramLoginAtts;\n\nregisterBlockType<TelegramLoginAtts>('wptelegram/login', {\n\ttitle: __('WP Telegram Login'),\n\ticon: 'smartphone',\n\tcategory: 'wptelegram',\n\tattributes: blockAttributesV2,\n\tedit: Edit,\n\n\tsave(props) {\n\t\treturn <Output attributes={props.attributes} className=\"\" />;\n\t},\n\tdeprecated: [\n\t\t{\n\t\t\tattributes: blockAttributesV0,\n\t\t\tsave(props) {\n\t\t\t\treturn <Output attributes={props.attributes} className=\"\" />;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: blockAttributesV1,\n\t\t\tmigrate(attributes) {\n\t\t\t\treturn { ...savedSettings, ...attributes };\n\t\t\t},\n\t\t\tsave(props) {\n\t\t\t\treturn <Output attributes={props.attributes} className=\"\" />;\n\t\t\t},\n\t\t},\n\t\t{\n\t\t\tattributes: blockAttributesV2,\n\t\t\tmigrate(attributes) {\n\t\t\t\treturn { ...savedSettings, ...attributes };\n\t\t\t},\n\t\t\tsave(props) {\n\t\t\t\treturn <Output attributes={props.attributes} className=\"\" />;\n\t\t\t},\n\t\t},\n\t],\n});\n"],"names":["getDomData","key","getPluginData","assets","Output","attributes","className","button_style","show_user_photo","corner_radius","button_width","avatar_width","jsxs","jsx","loginImageUrl","borderRadius","width","loginAvatarUrl","getButtonStyleOptions","__","savedSettings","_a","Edit","setAttributes","lang","show_if_user_is","useEffect","uiData","onChangeButtonStyle","useCallback","newStyle","onChangeShowUserPhoto","new_show_user_photo","onChangeCornerRadius","newRadius","onChangeShowIfUserIs","value","onChangeLang","Fragment","blockAttributesV0","type","default","blockAttributesV1","blockAttributesV2","registerBlockType","props"],"mappings":"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"}